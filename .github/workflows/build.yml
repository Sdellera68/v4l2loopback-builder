name: Build v4l2loopback for SM-N970F

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang bc flex bison libncurses-dev libssl-dev

      - name: Download Kernel.tar.gz
        uses: robinraju/release-downloader@v1
        with:
          repository: Sdellera68/v4l2loopback-builder
          tag: v1.0
          fileName: Kernel.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Platform.tar.gz
        uses: robinraju/release-downloader@v1
        with:
          repository: Sdellera68/v4l2loopback-builder
          tag: v1.0
          fileName: Platform.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute cache key
        id: key
        run: |
          echo "kernel_hash=$(sha256sum Kernel.tar.gz | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Restore cache of kernel_src
        id: cache
        uses: actions/cache@v3
        with:
          path: kernel_src
          key: kernel-src-${{ steps.key.outputs.kernel_hash }}

      - name: Extract kernel sources (if cache miss)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir kernel_src
          tar xzf Kernel.tar.gz -C kernel_src
          tar xzf Platform.tar.gz -C kernel_src

      - name: Find kernel root directory
        id: findroot
        run: |
          ROOT=$(find kernel_src -type f -name Makefile -exec grep -l "VERSION =" {} \; \
                 | head -n1 | xargs dirname)
          [ -n "$ROOT" ] || { echo "No kernel Makefile found!"; exit 1; }
          echo "kernel_root=$ROOT" >> $GITHUB_OUTPUT

      - name: Prepare kernel config
        run: gunzip -c config.gz > .config

      - name: Prepare build directory
        run: |
          mkdir -p "${{ steps.findroot.outputs.kernel_root }}/build"
          cp .config "${{ steps.findroot.outputs.kernel_root }}/build/.config"

      - name: Clone v4l2loopback
        run: git clone --depth 1 https://github.com/umlaeute/v4l2loopback.git

      - name: Build v4l2loopback
        run: |
          cd "${{ steps.findroot.outputs.kernel_root }}"
          make ARCH=arm64 O=build olddefconfig CC=clang HOSTCC=clang LLVM=1
          make -C build M=../../v4l2loopback ARCH=arm64 CC=clang HOSTCC=clang LLVM=1 modules

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: v4l2loopback-Exynos-N970F.ko
          path: v4l2loopback/v4l2loopback.ko
