name: Build v4l2loopback for SM-N970F

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang bc flex bison libncurses-dev libssl-dev unzip zip

      - name: Download Kernel.tar.gz
        uses: robinraju/release-downloader@v1
        with:
          repository: Sdellera68/v4l2loopback-builder
          tag: v1.0
          fileName: Kernel.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Platform.tar.gz
        uses: robinraju/release-downloader@v1
        with:
          repository: Sdellera68/v4l2loopback-builder
          tag: v1.0
          fileName: Platform.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract kernel sources
        run: |
          rm -rf kernel_src
          mkdir kernel_src
          tar -xzf Kernel.tar.gz -C kernel_src
          tar -xzf Platform.tar.gz -C kernel_src

      - name: Determine kernel root directory
        id: findroot
        run: |
          for d in kernel_src/*; do
            if [ -d "$d/arch" ] && [ -d "$d/drivers" ] && [ -f "$d/Makefile" ]; then
              echo "kernel_root=$d" >> $GITHUB_OUTPUT
              exit 0
            fi
          done
          echo "::error::Cannot find kernel root" 
          exit 1

      - name: Prepare kernel build tree
        run: |
          KDIR=${{ steps.findroot.outputs.kernel_root }}
          cd "$KDIR"
          make ARCH=arm64 O=build olddefconfig CC=clang HOSTCC=clang LLVM=1
          make ARCH=arm64 O=build prepare CC=clang HOSTCC=clang LLVM=1

      - name: Clone v4l2loopback
        run: git clone --depth 1 https://github.com/umlaeute/v4l2loopback.git

      - name: Build v4l2loopback module
        run: |
          KDIR=${{ steps.findroot.outputs.kernel_root }}/build
          cd v4l2loopback
          make KDIR="$KDIR" ARCH=arm64 CC=clang HOSTCC=clang modules

      - name: Upload module artifact
        uses: actions/upload-artifact@v4
        with:
          name: v4l2loopback-Exynos-N970F.ko
          path: v4l2loopback/v4l2loopback.ko
